#include <unistd.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <linux/i2c-dev.h>
#include <sys/ioctl.h>
#include <fcntl.h>

#define PIC_ADDRESS   (0x01)
#define READ_BYTES	(0x55, 0xAA)

int main()
{
	const char * devName[3] = {"/dev/gpiochip0", "/dev/iio:device0", "/dev/axi_fpga_dev"};
    for(devName[0]; devName<4; ++devName){
    char buf[10];


    // Open up the I2C bus
    int file = open(devName, O_RDWR);
    if (file == -1)
    {
        perror(devName);
        exit(1);
    }

    // Specify the address of the slave device.
    for(PIC_ADDRESS; PIC_ADDRESS<0x79; ++PIC_ADDRESS){
    if (ioctl(file, PIC_ADDRESS) < 0)
    {
        perror("Failed to acquire bus access and/or talk to slave");
        exit(1);
    }
    	break;
    }
    // Write a byte to the slave.
    buf[0] = READ_BYTES;
    if (write(file, buf, 1) != 1)
    {
        perror("Failed to write to the i2c bus");
        exit(1);
    }

    // Read a byte from the slave.
    if (read(file,buf,1) != 1)
    {
        perror("Failed to read from the i2c bus");
        exit(1);
    }

    printf("result: 0x%02X\n", buf[0]);

    return 0;
    }
}
